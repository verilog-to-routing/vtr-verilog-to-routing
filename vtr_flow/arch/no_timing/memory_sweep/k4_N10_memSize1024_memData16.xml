<architecture>

  <!-- jluu and ken: ODIN II specific config -->
  <models>
    <model name="multiply">
      <input_ports>
      <port name="a"/>
      <port name="b"/>
      </input_ports>
      <output_ports>
      <port name="out"/>
      </output_ports>
    </model>

    <model name="single_port_ram">
      <input_ports>
      <port name="we"/>     <!-- control -->
      <port name="addr"/>  <!-- address lines -->
      <port name="data"/>  <!-- data lines can be broken down into smaller bit widths minimum size 1 -->
      <port name="clk" is_clock="1"/>  <!-- memories are often clocked -->
      </input_ports>
      <output_ports>
      <port name="out"/>   <!-- output can be broken down into smaller bit widths minimum size 1 -->
      </output_ports>
    </model>

    <model name="dual_port_ram">
      <input_ports>
      <port name="we1"/>     <!-- write enable -->
      <port name="we2"/>     <!-- write enable -->
      <port name="addr1"/>  <!-- address lines -->
      <port name="addr2"/>  <!-- address lines -->
      <port name="data1"/>  <!-- data lines can be broken down into smaller bit widths minimum size 1 -->
      <port name="data2"/>  <!-- data lines can be broken down into smaller bit widths minimum size 1 -->
      <port name="clk" is_clock="1"/>  <!-- memories are often clocked -->
      </input_ports>
      <output_ports>
      <port name="out1"/>   <!-- output can be broken down into smaller bit widths minimum size 1 -->
      <port name="out2"/>   <!-- output can be broken down into smaller bit widths minimum size 1 -->
      </output_ports>
    </model>
  </models>
  <!-- jluu and ken: ODIN II specific config ends -->

  <!-- jluu and ken: Physical descriptions begin -->
<!-- <layout width="20" height="20"/> -->
<layout>
    <auto_layout aspect_ratio="1.0">
        <!--Perimeter of 'io' blocks with 'EMPTY' blocks at corners-->
        <perimeter type="io" priority="100"/>
        <corners type="EMPTY" priority="101"/>
        <!--Fill with 'clb'-->
        <fill type="clb" priority="10"/>
        <!--Column of 'memory' with 'EMPTY' blocks wherever a 'memory' does not fit. Vertical offset by 1 for perimeter.-->
        <col type="memory" startx="2" starty="1" repeatx="5" priority="20"/>
        <col type="EMPTY" startx="2" repeatx="5" starty="1" priority="19"/>
        <!--Column of 'mult_36' with 'EMPTY' blocks wherever a 'mult_36' does not fit. Vertical offset by 1 for perimeter.-->
        <col type="mult_36" startx="4" starty="1" repeatx="5" priority="20"/>
        <col type="EMPTY" startx="4" repeatx="5" starty="1" priority="19"/>
        </auto_layout>
</layout>
    <device>
      <sizing R_minW_nmos="5726.870117" R_minW_pmos="15491.700195"/>
      <area grid_logic_tile_area="30000.000000"/>
      <chan_width_distr>
        <x distr="uniform" peak="1.000000"/>
        <y distr="uniform" peak="1.000000"/>
      </chan_width_distr>
      <switch_block type="wilton" fs="3"/>
    <connection_block input_switch_name="ipin_cblock"/>
        </device>
    <switchlist>
      <switch type="mux" name="0" R="94.841003" Cin="1.537000e-14" Cout="2.194000e-13" Tdel="6.562000e-11" mux_trans_size="10.000000" buf_size="1"/>
    <!--switch ipin_cblock resistance set to yeild for 4x minimum drive strength buffer-->
        <switch type="mux" name="ipin_cblock" R="1431.71752925" Cout="0." Cin="1.191000e-14" Tdel="1.482000e-10" mux_trans_size="1.000000" buf_size="auto"/>
        </switchlist>
    <segmentlist>
      <segment freq="1.000000" length="4" type="unidir" Rmetal="11.064550" Cmetal="4.727860e-14">
        <mux name="0"/>
        <sb type="pattern">1 1 1 1 1</sb>
        <cb type="pattern">1 1 1 1</cb>
      </segment>
    </segmentlist>
    <complexblocklist>
      <pb_type name="io" capacity="7">
        <input name="outpad" num_pins="1" equivalent="false"/>
        <output name="inpad" num_pins="1"/>
        <clock name="clock" num_pins="1"/>

        <!-- IOs can operate as either inputs or outputs -->
        <mode name="inpad">
          <pb_type name="inpad" blif_model=".input" num_pb="1">
            <output name="inpad" num_pins="1"/>
          </pb_type>
          <interconnect>
            <direct name="inpad" input="inpad.inpad" output="io.inpad"/>
          </interconnect>
      
        </mode>
        <mode name="outpad">
          <pb_type name="outpad" blif_model=".output" num_pb="1">
            <input name="outpad" num_pins="1"/>
          </pb_type>
          <interconnect>
            <direct name="outpad" input="io.outpad" output="outpad.outpad"/>
          </interconnect>
        </mode>

        <fc in_type="frac" in_val="0.15" out_type="frac" out_val="0.125"/>

        <!-- IOs go on the periphery of the FPGA, for consistency, 
          make it physically equivalent on all sides so that only one definition of I/Os is needed.
          If I do not make a physically equivalent definition, then I need to define 4 different I/Os, one for each side of the FPGA
        -->
        <pinlocations pattern="custom">
          <loc side="left">io.outpad io.inpad io.clock</loc>
          <loc side="top">io.outpad io.inpad io.clock</loc>
          <loc side="right">io.outpad io.inpad io.clock</loc>
          <loc side="bottom">io.outpad io.inpad io.clock</loc>
        </pinlocations>

        </pb_type>

      <!-- Describe general-purpose complex block -->
      <pb_type name="clb">
        
        
          <input name="I" num_pins="22" equivalent="true"/>
          <output name="O" num_pins="10"/>
          <clock name="clk" num_pins="1"/>
          <pb_type name="ble" num_pb="10">
             <input name="in" num_pins="4"/>
             <output name="out" num_pins="1"/>
             <clock name="clk" num_pins="1"/>
             <pb_type name="soft_logic" num_pb="1">
               <input name="in" num_pins="4"/>
               <output name="out" num_pins="1"/>
            <mode name="n1_lut4">
              <pb_type name="lut4" blif_model=".names" num_pb="1" class="lut">
                <input name="in" num_pins="4" port_class="lut_in"/>
                <output name="out" num_pins="1" port_class="lut_out"/>
              </pb_type>
              <interconnect>
                <direct name="direct1" input="soft_logic.in[3:0]" output="lut4[0:0].in[3:0]"/>
                <direct name="direct2" input="lut4[0:0].out" output="soft_logic.out[0:0]"/>
              </interconnect>
            </mode>
             </pb_type>
          <pb_type name="ff" blif_model=".latch" num_pb="1" class="flipflop">
            <input name="D" num_pins="1" port_class="D"/>
            <output name="Q" num_pins="1" port_class="Q"/>
            <clock name="clk" num_pins="1" port_class="clock"/>
          </pb_type>
            <interconnect>
              <direct name="direct1" input="soft_logic.out[0:0]" output="ff.D"/>
              <direct name="direct2" input="ble.in" output="soft_logic.in"/>
              <direct name="direct3" input="ble.clk" output="ff.clk"/>
              <mux name="mux1" input="ff.Q soft_logic.out[0:0]" output="ble.out[0:0]"/>
             </interconnect>
          </pb_type>

          <interconnect>
            <complete name="complete1" input="clb.I ble[9:0].out" output="ble[9:0].in"/>
            <complete name="complete2" input="clb.clk" output="ble[9:0].clk"/>
            <direct name="direct1" input="ble[9:0].out" output="clb.O"/>
          </interconnect>
        <fc in_type="frac" in_val="0.15" out_type="frac" out_val="0.125"/>
        <pinlocations pattern="spread"/>
        </pb_type>

      <pb_type name="memory" height="1">
          <input name="addr1" num_pins="10"/>
          <input name="addr2" num_pins="10"/>
          <input name="data" num_pins="16"/>
          <input name="we1" num_pins="1"/>
          <input name="we2" num_pins="1"/>
          <output name="out" num_pins="16"/>
          <clock name="clk" num_pins="1"/>

          <mode name="mem_64x16_sp">
            <pb_type name="mem_64x16_sp" blif_model=".subckt single_port_ram" class="memory" num_pb="1">
              <input name="addr" num_pins="6" port_class="address"/>
              <input name="data" num_pins="16" port_class="data_in"/>
              <input name="we" num_pins="1" port_class="write_en"/>
              <output name="out" num_pins="16" port_class="data_out"/>
              <clock name="clk" num_pins="1" port_class="clock"/>
            </pb_type>
            <interconnect>
              <direct name="address1" input="memory.addr1[5:0]" output="mem_64x16_sp.addr">
              </direct>
              <direct name="data1" input="memory.data[15:0]" output="mem_64x16_sp.data">
              </direct>
              <direct name="writeen1" input="memory.we1" output="mem_64x16_sp.we">
              </direct>
              <direct name="dataout1" input="mem_64x16_sp.out" output="memory.out[15:0]">
              </direct>
              <direct name="clk" input="memory.clk" output="mem_64x16_sp.clk">
              </direct>
            </interconnect>
          </mode>
          <mode name="mem_128x8_dp">
            <pb_type name="mem_128x8_dp" blif_model=".subckt dual_port_ram" class="memory" num_pb="1">
              <input name="addr1" num_pins="7" port_class="address1"/>
              <input name="addr2" num_pins="7" port_class="address2"/>
              <input name="data1" num_pins="8" port_class="data_in1"/>
              <input name="data2" num_pins="8" port_class="data_in2"/>
              <input name="we1" num_pins="1" port_class="write_en1"/>
              <input name="we2" num_pins="1" port_class="write_en2"/>
              <output name="out1" num_pins="8" port_class="data_out1"/>
              <output name="out2" num_pins="8" port_class="data_out2"/>
              <clock name="clk" num_pins="1" port_class="clock"/>
            </pb_type>
            <interconnect>
              <direct name="address1" input="memory.addr1[6:0]" output="mem_128x8_dp.addr1">
              </direct>
              <direct name="address2" input="memory.addr2[6:0]" output="mem_128x8_dp.addr2">
              </direct>
              <direct name="data1" input="memory.data[7:0]" output="mem_128x8_dp.data1">
              </direct>
              <direct name="data2" input="memory.data[15:8]" output="mem_128x8_dp.data2">
              </direct>
              <direct name="writeen1" input="memory.we1" output="mem_128x8_dp.we1">
              </direct>
              <direct name="writeen2" input="memory.we2" output="mem_128x8_dp.we2">
              </direct>
              <direct name="dataout1" input="mem_128x8_dp.out1" output="memory.out[7:0]">
              </direct>
              <direct name="dataout2" input="mem_128x8_dp.out2" output="memory.out[15:8]">
              </direct>
              <direct name="clk" input="memory.clk" output="mem_128x8_dp.clk">
              </direct>
            </interconnect>
          </mode>

          <mode name="mem_128x8_sp">
            <pb_type name="mem_128x8_sp" blif_model=".subckt single_port_ram" class="memory" num_pb="1">
              <input name="addr" num_pins="7" port_class="address"/>
              <input name="data" num_pins="8" port_class="data_in"/>
              <input name="we" num_pins="1" port_class="write_en"/>
              <output name="out" num_pins="8" port_class="data_out"/>
              <clock name="clk" num_pins="1" port_class="clock"/>
            </pb_type>
            <interconnect>
              <direct name="address1" input="memory.addr1[6:0]" output="mem_128x8_sp.addr">
              </direct>
              <direct name="data1" input="memory.data[7:0]" output="mem_128x8_sp.data">
              </direct>
              <direct name="writeen1" input="memory.we1" output="mem_128x8_sp.we">
              </direct>
              <direct name="dataout1" input="mem_128x8_sp.out" output="memory.out[7:0]">
              </direct>
              <direct name="clk" input="memory.clk" output="mem_128x8_sp.clk">
              </direct>
            </interconnect>
          </mode>
          <mode name="mem_256x4_dp">
            <pb_type name="mem_256x4_dp" blif_model=".subckt dual_port_ram" class="memory" num_pb="1">
              <input name="addr1" num_pins="8" port_class="address1"/>
              <input name="addr2" num_pins="8" port_class="address2"/>
              <input name="data1" num_pins="4" port_class="data_in1"/>
              <input name="data2" num_pins="4" port_class="data_in2"/>
              <input name="we1" num_pins="1" port_class="write_en1"/>
              <input name="we2" num_pins="1" port_class="write_en2"/>
              <output name="out1" num_pins="4" port_class="data_out1"/>
              <output name="out2" num_pins="4" port_class="data_out2"/>
              <clock name="clk" num_pins="1" port_class="clock"/>
            </pb_type>
            <interconnect>
              <direct name="address1" input="memory.addr1[7:0]" output="mem_256x4_dp.addr1">
              </direct>
              <direct name="address2" input="memory.addr2[7:0]" output="mem_256x4_dp.addr2">
              </direct>
              <direct name="data1" input="memory.data[3:0]" output="mem_256x4_dp.data1">
              </direct>
              <direct name="data2" input="memory.data[7:4]" output="mem_256x4_dp.data2">
              </direct>
              <direct name="writeen1" input="memory.we1" output="mem_256x4_dp.we1">
              </direct>
              <direct name="writeen2" input="memory.we2" output="mem_256x4_dp.we2">
              </direct>
              <direct name="dataout1" input="mem_256x4_dp.out1" output="memory.out[3:0]">
              </direct>
              <direct name="dataout2" input="mem_256x4_dp.out2" output="memory.out[7:4]">
              </direct>
              <direct name="clk" input="memory.clk" output="mem_256x4_dp.clk">
              </direct>
            </interconnect>
          </mode>

          <mode name="mem_256x4_sp">
            <pb_type name="mem_256x4_sp" blif_model=".subckt single_port_ram" class="memory" num_pb="1">
              <input name="addr" num_pins="8" port_class="address"/>
              <input name="data" num_pins="4" port_class="data_in"/>
              <input name="we" num_pins="1" port_class="write_en"/>
              <output name="out" num_pins="4" port_class="data_out"/>
              <clock name="clk" num_pins="1" port_class="clock"/>
            </pb_type>
            <interconnect>
              <direct name="address1" input="memory.addr1[7:0]" output="mem_256x4_sp.addr">
              </direct>
              <direct name="data1" input="memory.data[3:0]" output="mem_256x4_sp.data">
              </direct>
              <direct name="writeen1" input="memory.we1" output="mem_256x4_sp.we">
              </direct>
              <direct name="dataout1" input="mem_256x4_sp.out" output="memory.out[3:0]">
              </direct>
              <direct name="clk" input="memory.clk" output="mem_256x4_sp.clk">
              </direct>
            </interconnect>
          </mode>
          <mode name="mem_512x2_dp">
            <pb_type name="mem_512x2_dp" blif_model=".subckt dual_port_ram" class="memory" num_pb="1">
              <input name="addr1" num_pins="9" port_class="address1"/>
              <input name="addr2" num_pins="9" port_class="address2"/>
              <input name="data1" num_pins="2" port_class="data_in1"/>
              <input name="data2" num_pins="2" port_class="data_in2"/>
              <input name="we1" num_pins="1" port_class="write_en1"/>
              <input name="we2" num_pins="1" port_class="write_en2"/>
              <output name="out1" num_pins="2" port_class="data_out1"/>
              <output name="out2" num_pins="2" port_class="data_out2"/>
              <clock name="clk" num_pins="1" port_class="clock"/>
            </pb_type>
            <interconnect>
              <direct name="address1" input="memory.addr1[8:0]" output="mem_512x2_dp.addr1">
              </direct>
              <direct name="address2" input="memory.addr2[8:0]" output="mem_512x2_dp.addr2">
              </direct>
              <direct name="data1" input="memory.data[1:0]" output="mem_512x2_dp.data1">
              </direct>
              <direct name="data2" input="memory.data[3:2]" output="mem_512x2_dp.data2">
              </direct>
              <direct name="writeen1" input="memory.we1" output="mem_512x2_dp.we1">
              </direct>
              <direct name="writeen2" input="memory.we2" output="mem_512x2_dp.we2">
              </direct>
              <direct name="dataout1" input="mem_512x2_dp.out1" output="memory.out[1:0]">
              </direct>
              <direct name="dataout2" input="mem_512x2_dp.out2" output="memory.out[3:2]">
              </direct>
              <direct name="clk" input="memory.clk" output="mem_512x2_dp.clk">
              </direct>
            </interconnect>
          </mode>

          <mode name="mem_512x2_sp">
            <pb_type name="mem_512x2_sp" blif_model=".subckt single_port_ram" class="memory" num_pb="1">
              <input name="addr" num_pins="9" port_class="address"/>
              <input name="data" num_pins="2" port_class="data_in"/>
              <input name="we" num_pins="1" port_class="write_en"/>
              <output name="out" num_pins="2" port_class="data_out"/>
              <clock name="clk" num_pins="1" port_class="clock"/>
            </pb_type>
            <interconnect>
              <direct name="address1" input="memory.addr1[8:0]" output="mem_512x2_sp.addr">
              </direct>
              <direct name="data1" input="memory.data[1:0]" output="mem_512x2_sp.data">
              </direct>
              <direct name="writeen1" input="memory.we1" output="mem_512x2_sp.we">
              </direct>
              <direct name="dataout1" input="mem_512x2_sp.out" output="memory.out[1:0]">
              </direct>
              <direct name="clk" input="memory.clk" output="mem_512x2_sp.clk">
              </direct>
            </interconnect>
          </mode>
          <mode name="mem_1024x1_dp">
            <pb_type name="mem_1024x1_dp" blif_model=".subckt dual_port_ram" class="memory" num_pb="1">
              <input name="addr1" num_pins="10" port_class="address1"/>
              <input name="addr2" num_pins="10" port_class="address2"/>
              <input name="data1" num_pins="1" port_class="data_in1"/>
              <input name="data2" num_pins="1" port_class="data_in2"/>
              <input name="we1" num_pins="1" port_class="write_en1"/>
              <input name="we2" num_pins="1" port_class="write_en2"/>
              <output name="out1" num_pins="1" port_class="data_out1"/>
              <output name="out2" num_pins="1" port_class="data_out2"/>
              <clock name="clk" num_pins="1" port_class="clock"/>
            </pb_type>
            <interconnect>
              <direct name="address1" input="memory.addr1[9:0]" output="mem_1024x1_dp.addr1">
              </direct>
              <direct name="address2" input="memory.addr2[9:0]" output="mem_1024x1_dp.addr2">
              </direct>
              <direct name="data1" input="memory.data[0:0]" output="mem_1024x1_dp.data1">
              </direct>
              <direct name="data2" input="memory.data[1:1]" output="mem_1024x1_dp.data2">
              </direct>
              <direct name="writeen1" input="memory.we1" output="mem_1024x1_dp.we1">
              </direct>
              <direct name="writeen2" input="memory.we2" output="mem_1024x1_dp.we2">
              </direct>
              <direct name="dataout1" input="mem_1024x1_dp.out1" output="memory.out[0:0]">
              </direct>
              <direct name="dataout2" input="mem_1024x1_dp.out2" output="memory.out[1:1]">
              </direct>
              <direct name="clk" input="memory.clk" output="mem_1024x1_dp.clk">
              </direct>
            </interconnect>
          </mode>

          <mode name="mem_1024x1_sp">
            <pb_type name="mem_1024x1_sp" blif_model=".subckt single_port_ram" class="memory" num_pb="1">
              <input name="addr" num_pins="10" port_class="address"/>
              <input name="data" num_pins="1" port_class="data_in"/>
              <input name="we" num_pins="1" port_class="write_en"/>
              <output name="out" num_pins="1" port_class="data_out"/>
              <clock name="clk" num_pins="1" port_class="clock"/>
            </pb_type>
            <interconnect>
              <direct name="address1" input="memory.addr1[9:0]" output="mem_1024x1_sp.addr">
              </direct>
              <direct name="data1" input="memory.data[0:0]" output="mem_1024x1_sp.data">
              </direct>
              <direct name="writeen1" input="memory.we1" output="mem_1024x1_sp.we">
              </direct>
              <direct name="dataout1" input="mem_1024x1_sp.out" output="memory.out[0:0]">
              </direct>
              <direct name="clk" input="memory.clk" output="mem_1024x1_sp.clk">
              </direct>
            </interconnect>
          </mode>



        <fc in_type="frac" in_val="0.15" out_type="frac" out_val="0.125"/>
        <pinlocations pattern="spread"/>
        </pb_type>

      <!-- This is the 36*36 uniform mult -->
      <pb_type name="mult_36" height="3">
          <input name="a" num_pins="36"/>
          <input name="b" num_pins="36"/>
          <output name="out" num_pins="72"/>

          <mode name="two_divisible_mult_18x18">
            <pb_type name="divisible_mult_18x18" num_pb="2">
              <input name="a" num_pins="18"/>
              <input name="b" num_pins="18"/>
              <output name="out" num_pins="36"/>

              <mode name="two_mult_9x9">
                <pb_type name="mult_9x9_slice" num_pb="2">
                  <input name="A_cfg" num_pins="9"/>
                  <input name="B_cfg" num_pins="9"/>
                  <output name="OUT_cfg" num_pins="18"/>

                  <pb_type name="mult_9x9" blif_model=".subckt multiply" num_pb="1">
                    <input name="a" num_pins="9"/>
                    <input name="b" num_pins="9"/>
                    <output name="out" num_pins="18"/>
                  </pb_type>

                  <interconnect>
                    <direct name="a2a" input="mult_9x9_slice.A_cfg" output="mult_9x9.a">
                    </direct>
                    <direct name="b2b" input="mult_9x9_slice.B_cfg" output="mult_9x9.b">
                    </direct>
                    <direct name="out2out" input="mult_9x9.out" output="mult_9x9_slice.OUT_cfg">
                    </direct>
                  </interconnect>
                </pb_type>
                <interconnect>
                  <direct name="a2a" input="divisible_mult_18x18.a" output="mult_9x9_slice[1:0].A_cfg">
                  </direct>
                  <direct name="b2b" input="divisible_mult_18x18.b" output="mult_9x9_slice[1:0].B_cfg">
                  </direct>
                  <direct name="out2out" input="mult_9x9_slice[1:0].OUT_cfg" output="divisible_mult_18x18.out">
                  </direct>
                </interconnect>
              </mode>

              <mode name="mult_18x18">
                <pb_type name="mult_18x18_slice" num_pb="1">
                  <input name="A_cfg" num_pins="18"/>
                  <input name="B_cfg" num_pins="18"/>
                  <output name="OUT_cfg" num_pins="36"/>

                  <pb_type name="mult_18x18" blif_model=".subckt multiply" num_pb="1">
                    <input name="a" num_pins="18"/>
                    <input name="b" num_pins="18"/>
                    <output name="out" num_pins="36"/>
                  </pb_type>

                  <interconnect>
                    <direct name="a2a" input="mult_18x18_slice.A_cfg" output="mult_18x18.a">
                    </direct>
                    <direct name="b2b" input="mult_18x18_slice.B_cfg" output="mult_18x18.b">
                    </direct>
                    <direct name="out2out" input="mult_18x18.out" output="mult_18x18_slice.OUT_cfg">
                    </direct>
                  </interconnect>
                </pb_type>
                <interconnect>
                  <direct name="a2a" input="divisible_mult_18x18.a" output="mult_18x18_slice.A_cfg">
                  </direct>
                  <direct name="b2b" input="divisible_mult_18x18.b" output="mult_18x18_slice.B_cfg">
                  </direct>
                  <direct name="out2out" input="mult_18x18_slice.OUT_cfg" output="divisible_mult_18x18.out">
                  </direct>
                </interconnect>
              </mode>
            </pb_type>
            <interconnect>
              <direct name="a2a" input="mult_36.a" output="divisible_mult_18x18[1:0].a">
              </direct>
              <direct name="b2b" input="mult_36.b" output="divisible_mult_18x18[1:0].b">
              </direct>
              <direct name="out2out" input="divisible_mult_18x18[1:0].out" output="mult_36.out">
              </direct>
            </interconnect>
          </mode>

          <mode name="mult_36x36">
            <pb_type name="mult_36x36_slice" num_pb="1">
              <input name="A_cfg" num_pins="36"/>
              <input name="B_cfg" num_pins="36"/>
              <output name="OUT_cfg" num_pins="72"/>

              <pb_type name="mult_36x36" blif_model=".subckt multiply" num_pb="1">
                <input name="a" num_pins="36"/>
                <input name="b" num_pins="36"/>
                <output name="out" num_pins="72"/>
              </pb_type>

              <interconnect>
                <direct name="a2a" input="mult_36x36_slice.A_cfg" output="mult_36x36.a">
                </direct>
                <direct name="b2b" input="mult_36x36_slice.B_cfg" output="mult_36x36.b">
                </direct>
                <direct name="out2out" input="mult_36x36.out" output="mult_36x36_slice.OUT_cfg">
                </direct>
              </interconnect>
            </pb_type>
            <interconnect>
              <direct name="a2a" input="mult_36.a" output="mult_36x36_slice.A_cfg">
              </direct>
              <direct name="b2b" input="mult_36.b" output="mult_36x36_slice.B_cfg">
              </direct>
              <direct name="out2out" input="mult_36x36_slice.OUT_cfg" output="mult_36.out">
              </direct>
            </interconnect>
          </mode>



        <fc in_type="frac" in_val="0.15" out_type="frac" out_val="0.125"/>
        <pinlocations pattern="spread"/>

        </pb_type>
    </complexblocklist>
  </architecture>