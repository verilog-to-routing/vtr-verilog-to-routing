<!-- 
Architecture based off Stratix IV
  Use closest ifar architecture: K06 N10 45nm fc 0.15 area-delay optimized, scale to 40 nm using linear scaling
      n10k06l04.fc15.area1delay1.cmos45nm.bptm.cmos45nm.xml
      - because documentation sparser for soft logic (delays not in QUIP), harder to track down, not worth our time considering the level of accuracy is approximate
      - delays multiplied by 40/45 to normalize for process difference between stratix 4 and 45 nm technology (called full scaling)

  Use delay numbers off Altera device handbook:

    http://www.altera.com/literature/hb/stratix-iv/stx4_5v1.pdf
      http://www.altera.com/literature/hb/stratix-iv/stx4_siv51004.pdf
      http://www.altera.com/literature/hb/stratix-iv/stx4_siv51003.pdf
    multipliers at 600 MHz, no detail on 9x9 vs 36x36
     - datasheets unclear
      - claims 4 18x18 independant multipliers, following test indicates that this is not the case:
           created 4 18x18 mulitpliers, logiclocked them to a single DSP block, compile
           result - 2 18x18 multipliers got packed together, the other 2 got ejected out of the logiclock region without error
           conclusion - just take the 600 MHz as is, and Quartus II logiclock hasn't fixed the bug that I've seen it do to registers when I worked at Altera (ie. eject without warning)

  NOTE: Area numbers for hard blocks unknown!
--><architecture>
  
  <!-- ODIN II specific config -->
  <models>
  </models>
  <!-- ODIN II specific config ends -->
 
  <!-- Physical descriptions begin (area optimized for N10-K6-L4) -->
  <layout>
    <auto_layout aspect_ratio="1.0">
        <!--Perimeter of 'io' blocks with 'EMPTY' blocks at corners-->
        <perimeter type="io" priority="100"/>
        <corners type="EMPTY" priority="101"/>
        <!--Fill with 'clb'-->
        <fill type="clb" priority="10"/>
        </auto_layout>
</layout>

		<device>
			<sizing R_minW_nmos="5726.870117" R_minW_pmos="15491.700195"/>
			<area grid_logic_tile_area="30000.000000"/>
			<chan_width_distr>
				<x distr="uniform" peak="1.000000"/>
				<y distr="uniform" peak="1.000000"/>
			</chan_width_distr>
			<switch_block type="wilton" fs="3"/>
		<connection_block input_switch_name="ipin_cblock"/>
        </device>
		<switchlist>
			<switch type="tristate" name="0" R="94.841003" Cin="1.537000e-14" Cout="2.194000e-13" Tdel="6.562000e-11"/>
		<!--switch ipin_cblock resistance set to yeild for 4x minimum drive strength buffer-->
        <switch type="mux" name="ipin_cblock" R="1431.71752925" Cout="0." Cin="1.191000e-14" Tdel="1.482000e-10" mux_trans_size="1.000000" buf_size="auto"/>
        </switchlist>
		<segmentlist>
			<segment freq="1.000000" length="4" type="bidir" Rmetal="11.064550" Cmetal="4.727860e-14">
			<wire_switch name="0"/>
			<sb type="pattern">1 1 1 1 1</sb>
			<cb type="pattern">1 1 1 1</cb>
			<opin_switch name="0"/>
			</segment>
		</segmentlist>

		<complexblocklist>
      <!-- Capacity is a unique property of I/Os, it is the maximum number of I/Os that can be placed at the same (X,Y) location on the FPGA -->
      <pb_type name="io" capacity="4">
        <input name="outpad" num_pins="1"/>
        <output name="inpad" num_pins="1"/>
        <clock name="clock" num_pins="1"/>

        <!-- IOs can operate as either inputs or outputs -->
        <mode name="inpad">
          <pb_type name="inpad" blif_model=".input" num_pb="1">
            <output name="inpad" num_pins="1"/>
          </pb_type>
          <interconnect>
            <direct name="inpad" input="inpad.inpad" output="io.inpad">
            <delay_constant max="7.734000e-11" in_port="inpad.inpad" out_port="io.inpad"/>
            </direct>
          </interconnect>
      
        </mode>
        <mode name="outpad">
          <pb_type name="outpad" blif_model=".output" num_pb="1">
            <input name="outpad" num_pins="1"/>
          </pb_type>
          <interconnect>
            <direct name="outpad" input="io.outpad" output="outpad.outpad">
            <delay_constant max="4.395000e-11" in_port="io.outpad" out_port="outpad.outpad"/>
            </direct>
          </interconnect>
        </mode>

        <fc in_type="frac" in_val="1.0" out_type="frac" out_val="1.0"/>

        <!-- IOs go on the periphery of the FPGA, for consistency, 
          make it physically equivalent on all sides so that only one definition of I/Os is needed.
          If I do not make a physically equivalent definition, then I need to define 4 different I/Os, one for each side of the FPGA
        -->
        <pinlocations pattern="custom">
          <loc side="left">io.outpad io.inpad io.clock</loc>
          <loc side="top">io.outpad io.inpad io.clock</loc>
          <loc side="right">io.outpad io.inpad io.clock</loc>
          <loc side="bottom">io.outpad io.inpad io.clock</loc>
        </pinlocations>

        </pb_type>


      <pb_type name="clb">
        <input name="I" num_pins="10" equivalent="true"/>
        <output name="O" num_pins="4" equivalent="true"/>
        <clock name="clk" num_pins="1"/>

        <!-- Describe basic logic element ifar delay numbers -->
        <pb_type name="ble" num_pb="4">
          <input name="in" num_pins="4"/>
             <output name="out" num_pins="1"/>
             <clock name="clk" num_pins="1"/>
             <pb_type name="soft_logic" num_pb="1">
               <input name="in" num_pins="4"/>
               <output name="out" num_pins="1"/>
                <mode name="n1_lut4">
                  <pb_type name="lut4" blif_model=".names" num_pb="1" class="lut">
                    <input name="in" num_pins="4" port_class="lut_in"/>
                    <output name="out" num_pins="1" port_class="lut_out"/>

                    <!-- LUT timing using delay matrix -->
                    <delay_matrix type="max" in_port="lut4.in" out_port="lut4.out">
                      1.679000e-10
                      1.679000e-10
                      1.679000e-10
                      1.679000e-10
                    </delay_matrix>
                  </pb_type>
                  <interconnect>
                    <direct name="direct1" input="soft_logic.in[3:0]" output="lut4[0:0].in[3:0]"/>
                    <direct name="direct2" input="lut4[0:0].out" output="soft_logic.out[0:0]">
                      <pack_pattern name="ble4" in_port="lut4[0:0].out" out_port="soft_logic.out[0:0]"/>
                    </direct>
                  </interconnect>
                </mode>
             </pb_type>
          <pb_type name="ff" blif_model=".latch" num_pb="1" class="flipflop">
            <input name="D" num_pins="1" port_class="D"/>
            <output name="Q" num_pins="1" port_class="Q"/>
            <clock name="clk" num_pins="1" port_class="clock"/>
            <T_setup value="3.990000e-11" port="ff.D" clock="clk"/>
            <T_clock_to_Q max="1.261000e-10" port="ff.Q" clock="clk"/>
          </pb_type>
          <interconnect>
            <!-- Two ff, make ff available to only corresponding luts -->
            <direct name="direct1" input="ble.in" output="soft_logic.in"/>
            <direct name="direct2" input="soft_logic.out" output="ff.D">
              <pack_pattern name="ble4" in_port="soft_logic.out" out_port="ff.D"/>
            </direct>
            <direct name="direct4" input="ble.clk" output="ff.clk"/>
            <mux name="mux1" input="ff.Q soft_logic.out" output="ble.out"/>
           </interconnect>
        </pb_type>
        <interconnect>
          <complete name="crossbar" input="clb.I ble[3:0].out" output="ble[3:0].in">
            <delay_constant max="9.955000e-11" in_port="clb.I" out_port="ble[3:0].in"/>
            <delay_constant max="1.042000e-10" in_port="ble[3:0].out" out_port="ble[3:0].in"/>
          </complete>
          <complete name="clks" input="clb.clk" output="ble[3:0].clk">
          </complete>
          <direct name="clbouts" input="ble[3:0].out" output="clb.O">
          </direct>
        </interconnect>


        <fc in_type="frac" in_val="0.5" out_type="frac" out_val="0.25"/>

        <pinlocations pattern="spread"/>
        </pb_type>

    </complexblocklist>
  </architecture>