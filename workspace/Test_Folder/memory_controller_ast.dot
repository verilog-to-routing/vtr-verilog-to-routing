digraph G {	
rankdir=LR;	
ranksep=.25;
	0 [label=< MODULE<br/>memory_controller>];
	1 [label=< VAR_DECLARE_LIST>];
	0 -> 1;
	2 [label=< input clk>];
	1 -> 2;
	3 [label=< input memory_controller_address>];
	1 -> 3;
	4 [label=<RANGE_REF>];
	3 -> 4;
	5 [label=< MIN>];
	4 -> 5;
	6 [label=< 00000020<br/>00000000000000000000000000100000>];
	5 -> 6;
	7 [label=< 00000001<br/>00000000000000000000000000000001>];
	5 -> 7;
	8 [label=< 00000000<br/>00000000000000000000000000000000>];
	4 -> 8;
	9 [label=< input memory_controller_write_enable>];
	1 -> 9;
	10 [label=< input memory_controller_in>];
	1 -> 10;
	11 [label=<RANGE_REF>];
	10 -> 11;
	12 [label=< MIN>];
	11 -> 12;
	13 [label=< 00000020<br/>00000000000000000000000000100000>];
	12 -> 13;
	14 [label=< 00000001<br/>00000000000000000000000000000001>];
	12 -> 14;
	15 [label=< 00000000<br/>00000000000000000000000000000000>];
	11 -> 15;
	16 [label=< output memory_controller_out>];
	1 -> 16;
	17 [label=<RANGE_REF>];
	16 -> 17;
	18 [label=< MIN>];
	17 -> 18;
	19 [label=< 00000020<br/>00000000000000000000000000100000>];
	18 -> 19;
	20 [label=< 00000001<br/>00000000000000000000000000000001>];
	18 -> 20;
	21 [label=< 00000000<br/>00000000000000000000000000000000>];
	17 -> 21;
	22 [label=< MODULE_ITEMS>];
	0 -> 22;
	23 [label=< VAR_DECLARE_LIST>];
	22 -> 23;
	24 [label=< input clk>];
	23 -> 24;
	25 [label=< VAR_DECLARE_LIST>];
	22 -> 25;
	26 [label=< input memory_controller_address>];
	25 -> 26;
	27 [label=<RANGE_REF>];
	26 -> 27;
	28 [label=< MIN>];
	27 -> 28;
	29 [label=< 00000020<br/>00000000000000000000000000100000>];
	28 -> 29;
	30 [label=< 00000001<br/>00000000000000000000000000000001>];
	28 -> 30;
	31 [label=< 00000000<br/>00000000000000000000000000000000>];
	27 -> 31;
	32 [label=< VAR_DECLARE_LIST>];
	22 -> 32;
	33 [label=< input memory_controller_write_enable>];
	32 -> 33;
	34 [label=< VAR_DECLARE_LIST>];
	22 -> 34;
	35 [label=< input memory_controller_in>];
	34 -> 35;
	36 [label=<RANGE_REF>];
	35 -> 36;
	37 [label=< MIN>];
	36 -> 37;
	38 [label=< 00000020<br/>00000000000000000000000000100000>];
	37 -> 38;
	39 [label=< 00000001<br/>00000000000000000000000000000001>];
	37 -> 39;
	40 [label=< 00000000<br/>00000000000000000000000000000000>];
	36 -> 40;
	41 [label=< VAR_DECLARE_LIST>];
	22 -> 41;
	42 [label=< output memory_controller_out>];
	41 -> 42;
	43 [label=<RANGE_REF>];
	42 -> 43;
	44 [label=< MIN>];
	43 -> 44;
	45 [label=< 00000020<br/>00000000000000000000000000100000>];
	44 -> 45;
	46 [label=< 00000001<br/>00000000000000000000000000000001>];
	44 -> 46;
	47 [label=< 00000000<br/>00000000000000000000000000000000>];
	43 -> 47;
	48 [label=< VAR_DECLARE_LIST>];
	22 -> 48;
	49 [label=< reg memory_controller_out>];
	48 -> 49;
	50 [label=<RANGE_REF>];
	49 -> 50;
	51 [label=< MIN>];
	50 -> 51;
	52 [label=< 00000020<br/>00000000000000000000000000100000>];
	51 -> 52;
	53 [label=< 00000001<br/>00000000000000000000000000000001>];
	51 -> 53;
	54 [label=< 00000000<br/>00000000000000000000000000000000>];
	50 -> 54;
	55 [label=< VAR_DECLARE_LIST>];
	22 -> 55;
	56 [label=< reg str_address>];
	55 -> 56;
	57 [label=<RANGE_REF>];
	56 -> 57;
	58 [label=< 00000004<br/>00000000000000000000000000000100>];
	57 -> 58;
	59 [label=< 00000000<br/>00000000000000000000000000000000>];
	57 -> 59;
	60 [label=< VAR_DECLARE_LIST>];
	22 -> 60;
	61 [label=< reg str_write_enable>];
	60 -> 61;
	62 [label=< VAR_DECLARE_LIST>];
	22 -> 62;
	63 [label=< reg str_in>];
	62 -> 63;
	64 [label=<RANGE_REF>];
	63 -> 64;
	65 [label=< 00000007<br/>00000000000000000000000000000111>];
	64 -> 65;
	66 [label=< 00000000<br/>00000000000000000000000000000000>];
	64 -> 66;
	67 [label=< VAR_DECLARE_LIST>];
	22 -> 67;
	68 [label=< wire str_out>];
	67 -> 68;
	69 [label=<RANGE_REF>];
	68 -> 69;
	70 [label=< 00000007<br/>00000000000000000000000000000111>];
	69 -> 70;
	71 [label=< 00000000<br/>00000000000000000000000000000000>];
	69 -> 71;
	72 [label=< MODULE_INSTANCE>];
	22 -> 72;
	73 [label=< MODULE_INSTANCE<br/>single_port_ram>];
	72 -> 73;
	74 [label=< MODULE_NAMED_INSTANCE<br/>_str>];
	73 -> 74;
	75 [label=< MODULE_CONNECT_LIST>];
	74 -> 75;
	76 [label=< MODULE_CONNECT<br/>clk>];
	75 -> 76;
	77 [label=< clk>];
	76 -> 77;
	78 [label=< MODULE_CONNECT<br/>addr>];
	75 -> 78;
	79 [label=< str_address>];
	78 -> 79;
	80 [label=< MODULE_CONNECT<br/>we>];
	75 -> 80;
	81 [label=< str_write_enable>];
	80 -> 81;
	82 [label=< MODULE_CONNECT<br/>data>];
	75 -> 82;
	83 [label=< str_in>];
	82 -> 83;
	84 [label=< MODULE_CONNECT<br/>out>];
	75 -> 84;
	85 [label=< str_out>];
	84 -> 85;
	86 [label=< VAR_DECLARE_LIST>];
	22 -> 86;
	87 [label=< wire tag>];
	86 -> 87;
	88 [label=< ASSIGN>];
	22 -> 88;
	89 [label=< BLOCKING_STATEMENT>];
	88 -> 89;
	90 [label=< tag>];
	89 -> 90;
	91 [label=< bAND>];
	89 -> 91;
	92 [label=< bAND>];
	91 -> 92;
	93 [label=< bOR>];
	92 -> 93;
	94 [label=< memory_controller_address>];
	93 -> 94;
	95 [label=< bOR>];
	92 -> 95;
	96 [label=< memory_controller_address>];
	95 -> 96;
	97 [label=< bOR>];
	91 -> 97;
	98 [label=< memory_controller_in>];
	97 -> 98;
	99 [label=< VAR_DECLARE_LIST>];
	22 -> 99;
	100 [label=< reg prevTag>];
	99 -> 100;
	101 [label=<RANGE_REF>];
	100 -> 101;
	102 [label=< MIN>];
	101 -> 102;
	103 [label=< 00000001<br/>00000000000000000000000000000001>];
	102 -> 103;
	104 [label=< 00000001<br/>00000000000000000000000000000001>];
	102 -> 104;
	105 [label=< 00000000<br/>00000000000000000000000000000000>];
	101 -> 105;
	106 [label=< ALWAYS>];
	22 -> 106;
	107 [label=< DELAY_CONTROL>];
	106 -> 107;
	108 [label=< POSEDGE>];
	107 -> 108;
	109 [label=< clk>];
	108 -> 109;
	110 [label=< NON_BLOCKING_STATEMENT>];
	106 -> 110;
	111 [label=< prevTag>];
	110 -> 111;
	112 [label=< tag>];
	110 -> 112;
	113 [label=< ALWAYS>];
	22 -> 113;
	114 [label=< DELAY_CONTROL>];
	113 -> 114;
	115 [label=< tag>];
	114 -> 115;
	116 [label=< memory_controller_address>];
	114 -> 116;
	117 [label=< memory_controller_write_enable>];
	114 -> 117;
	118 [label=< memory_controller_in>];
	114 -> 118;
	119 [label=< BLOCK>];
	113 -> 119;
	120 [label=< CASE>];
	119 -> 120;
	121 [label=< tag>];
	120 -> 121;
	122 [label=< CASE_LIST>];
	120 -> 122;
	123 [label=< CASE_ITEM>];
	122 -> 123;
	124 [label=< 0<br/>0>];
	123 -> 124;
	125 [label=< BLOCK>];
	123 -> 125;
	126 [label=< BLOCKING_STATEMENT>];
	125 -> 126;
	127 [label=< str_address>];
	126 -> 127;
	128 [label=< RANGE_REF<br/>memory_controller_address>];
	126 -> 128;
	129 [label=< ADD>];
	128 -> 129;
	130 [label=< MIN>];
	129 -> 130;
	131 [label=< 00000005<br/>00000000000000000000000000000101>];
	130 -> 131;
	132 [label=< 00000001<br/>00000000000000000000000000000001>];
	130 -> 132;
	133 [label=< 00000000<br/>00000000000000000000000000000000>];
	129 -> 133;
	134 [label=< 00000000<br/>00000000000000000000000000000000>];
	128 -> 134;
	135 [label=< BLOCKING_STATEMENT>];
	125 -> 135;
	136 [label=< str_write_enable>];
	135 -> 136;
	137 [label=< memory_controller_write_enable>];
	135 -> 137;
	138 [label=< BLOCKING_STATEMENT>];
	125 -> 138;
	139 [label=< RANGE_REF<br/>str_in>];
	138 -> 139;
	140 [label=< MIN>];
	139 -> 140;
	141 [label=< 00000008<br/>00000000000000000000000000001000>];
	140 -> 141;
	142 [label=< 00000001<br/>00000000000000000000000000000001>];
	140 -> 142;
	143 [label=< 00000000<br/>00000000000000000000000000000000>];
	139 -> 143;
	144 [label=< RANGE_REF<br/>memory_controller_in>];
	138 -> 144;
	145 [label=< MIN>];
	144 -> 145;
	146 [label=< 00000008<br/>00000000000000000000000000001000>];
	145 -> 146;
	147 [label=< 00000001<br/>00000000000000000000000000000001>];
	145 -> 147;
	148 [label=< 00000000<br/>00000000000000000000000000000000>];
	144 -> 148;
	149 [label=< CASE>];
	119 -> 149;
	150 [label=< prevTag>];
	149 -> 150;
	151 [label=< CASE_LIST>];
	149 -> 151;
	152 [label=< CASE_ITEM>];
	151 -> 152;
	153 [label=< 0<br/>0>];
	152 -> 153;
	154 [label=< BLOCKING_STATEMENT>];
	152 -> 154;
	155 [label=< memory_controller_out>];
	154 -> 155;
	156 [label=< str_out>];
	154 -> 156;
}
